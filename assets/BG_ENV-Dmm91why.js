import{C as p,s as P,G as L,D as k,M as x,d as T,e as j,K as f,L as C,E as h,aR as G,T as S,S as m}from"./three.module-mb-WANHP.js";import{E as v}from"./EXRLoader-CrxFBtHm.js";import{R}from"./RGBELoader-DeKSjiHf.js";import{G as E}from"./GroundProjectedSkybox-ZeOOmZad.js";import{H as w}from"./HDRI_LIST-DJCqOZOR.js";const c=new G;c.setResponseType("blob");const y=new S,u=new v,g=new R,a={None:null,Color:"color",Default:"default",GroundProjection:"gp"},l={None:null,HDRI:"hdri"};class N{constructor(e,{loadingHelper:t}={}){this.scene=e,this.loadingHelper=t,this.preset=Object.values(w)[0],this.environmentType=l.None,this.backgroundType=a.GroundProjection,this.gpRadius=10,this.gpHeight=1,this.bgColor=new p("#ffffff"),this.sunEnabled,this.sunPivot,this.sunLight,this.sunPos=new P(1,1,1),this.sunColor=new p("#ffffff"),this.shadowFloorEnabled,this.shadowFloor,this.shadowOpacity=1,this.envTexture,this.bgTexture,this.groundProjectedSkybox,this.envCache={},this.bgCache={},this.guiFolder=null}init(){this.sunEnabled&&!this.sunPivot&&(this.sunPivot=new L,this.sunPivot.name="sun_pivot",this.sunLight=new k(16777195,1),this.sunLight.name="sun",this.sunLight.color=this.sunColor,this.sunLight.castShadow=!0,this.sunLight.shadow.camera.near=.1,this.sunLight.shadow.camera.far=50,this.sunLight.shadow.camera.right=15,this.sunLight.shadow.camera.left=-15,this.sunLight.shadow.camera.top=15,this.sunLight.shadow.camera.bottom=-15,this.sunLight.shadow.mapSize.width=1024,this.sunLight.shadow.mapSize.height=1024,this.sunLight.shadow.radius=1.95,this.sunLight.shadow.blurSamples=6,sunLight.shadow.bias=-5e-4,this.sunPivot.add(sunLight)),this.shadowFloorEnabled&&!this.shadowFloor&&(this.shadowFloor=new x(new T(10,10).rotateX(-Math.PI/2),new j({opacity:this.shadowOpacity})),this.shadowFloor.name="shadow_floor",this.shadowFloor.receiveShadow=!0,this.shadowFloor.position.set(0,.001,0))}setEnvType(e){this.environmentType=l[e]}setBGType(e){this.backgroundType=a[e]}useFullFloat(){u.setDataType(f),g.setDataType(f)}addGui(e){const t=e.addFolder("BG & ENV");return this.guiFolder=t,t.add(this,"preset",w).onChange(o=>{this.preset=o,this.updateAll()}),t.add(this,"environmentType",l).onChange(()=>{this.updateAll()}),t.add(this,"backgroundType",a).onChange(o=>{this.updateAll(),o===a.Color?this.bgColorPicker=t.addColor(this,"bgColor"):(this.bgColorPicker?.destroy(),this.bgColorPicker=null)}),t}async updateAll(){const e=this.preset;if(this.init(),await Promise.all([this.downloadEnvironment(e),this.downloadBackground(e)]),this.scene.environment=this.envTexture,this.bgTexture||(this.scene.background=null,this.backgroundType===a.Color&&(this.scene.background=this.bgColor)),this.backgroundType===a.GroundProjection&&this.bgTexture)this.scene.background=null,this.groundProjectedSkybox||(this.groundProjectedSkybox=new E(this.bgTexture),this.groundProjectedSkybox.scale.setScalar(100)),e.groundProj.radius&&(this.gpRadius=e.groundProj.radius),e.groundProj.height&&(this.gpHeight=e.groundProj.height),this.bgTexture.minFilter=C,this.groundProjectedSkybox.material.uniforms.map.value=this.bgTexture,this.groundProjectedSkybox.radius=this.gpRadius,this.groundProjectedSkybox.height=this.gpHeight,this.scene.add(this.groundProjectedSkybox);else switch(this.groundProjectedSkybox?.parent&&this.groundProjectedSkybox.removeFromParent(),this.backgroundType){case a.Default:{this.scene.background=this.bgTexture;break}case a.Color:{this.scene.background=this.bgColor;break}default:{this.scene.background=null;break}}}async downloadEnvironment({exr:e,hdr:t}={}){const o=e||t;if(this.environmentType===l.None){this.envTexture=null;return}let r=this.envCache[o];r||(this.loadingHelper?.setGlobalProgress(o,0),r=e?await u.loadAsync(o,s=>this.loadingHelper?.setGlobalProgress(o,s.loaded/s.total)):await g.loadAsync(o,s=>this.loadingHelper?.setGlobalProgress(o,s.loaded/s.total)),this.envCache[o]=r,r.mapping=h),this.envTexture=r}async downloadBackground({webP:e,avif:t}={}){const o=e||t;if(!(this.backgroundType===a.Default||this.backgroundType===a.GroundProjection)){this.bgTexture=null;return}if(o){let r=this.bgCache[o];if(!r){this.loadingHelper?.setGlobalProgress(o,0);const s=await c.loadAsync(o,n=>this.loadingHelper?.setGlobalProgress(o,n.loaded/n.total)),i=URL.createObjectURL(s);r=await y.loadAsync(i),URL.revokeObjectURL(i),this.bgCache[o]=r,r.mapping=h,r.colorSpace=m}this.bgTexture=r}}async setupEnvironment(){loadEnv(this.environmentType)}async loadEnv(e){if(!e){scene.background=null,scene.environment=null;return}const t=async()=>{if(!e.exr)return;this.loadingHelper?.setGlobalProgress(e.exr,0);const s=await u.loadAsync(e.exr,i=>this.loadingHelper?.setGlobalProgress(e.exr,i.loaded/i.total));s.mapping=h,scene.environment=s,console.log("exr loaded")},o=async()=>{if(!e.hdr)return;this.loadingHelper?.setGlobalProgress(e.hdr,0);const s=await g.loadAsync(e.hdr,i=>this.loadingHelper?.setGlobalProgress(e.hdr,i.loaded/i.total));s.mapping=h,scene.environment=s,console.log("hdr loaded")},r=async()=>{const s=e.webP||e.avif;if(s){this.loadingHelper?.setGlobalProgress(s,0);const i=await c.loadAsync(s,b=>this.loadingHelper?.setGlobalProgress(s,b.loaded/b.total)),n=URL.createObjectURL(i),d=await y.loadAsync(n);URL.revokeObjectURL(n),d.mapping=h,d.colorSpace=m,scene.background=d,console.log("Background loaded"),params.groundProjection&&loadGroundProj(params.environment)}};await Promise.all([t(),o(),r()]),e.sunPos?(sunLight.visible=!0,sunLight.position.fromArray(e.sunPos)):sunLight.visible=!1,e.sunColor?sunLight.color.set(e.sunColor):sunLight.color.set(16777215)}}export{N as B};
