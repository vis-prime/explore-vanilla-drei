import{C as T,i as F,H,K as O,ax as k,z as U,W as B,S as V,A as X,a as q,b as Y,E as K,G as W,c as N,R as Z,M as y,d as $,D as J,f as Q,g as R,B as ee,s as ae,o as C}from"./three.module-CpOMtsua.js";import{S as te,O as ie,G as ne,D as re}from"./OrbitControls-FqkbUa6U.js";import{H as oe}from"./HDRLoader-CNYvXwJL.js";import{T as se}from"./TransformControls-DIS8GcSd.js";import{M as de}from"./MODEL_LIST-Bh-xXQZi.js";import{H as le}from"./HDRI_LIST-DJCqOZOR.js";import{s as he}from"./shaderMaterial-BSjRKRz3.js";import{M as ce}from"./MeshDiscardMaterial-D-pamrVR.js";function pe(a){return a.isLight}function me(a){return!!a.geometry}const ge=he({color:new T(0),blend:2,alphaTest:.75,opacity:0,map:null},`varying vec2 vUv;
   void main() {
     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);
     vUv = uv;
   }`,`varying vec2 vUv;
   uniform sampler2D map;
   uniform vec3 color;
   uniform float opacity;
   uniform float alphaTest;
   uniform float blend;
   void main() {
     vec4 sampledDiffuseColor = texture2D(map, vUv);
     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);
     #include <tonemapping_fragment>
     #include <${parseInt(U.replace(/\D+/g,""))>=154?"colorspace_fragment":"encodings_fragment"}>
   }`);class fe{constructor(e,n,o=1024){this.renderer=e,this.res=o,this.scene=n,this.buffer1Active=!1,this.lights=[],this.meshes=[],this.object=null,this.clearColor=new T,this.clearAlpha=0;const r=/(Android|iPad|iPhone|iPod)/g.test(navigator.userAgent)?H:O;this.progressiveLightMap1=new F(this.res,this.res,{type:r}),this.progressiveLightMap2=new F(this.res,this.res,{type:r}),this.discardMat=new ce,this.targetMat=new k({fog:!1}),this.previousShadowMap={value:this.progressiveLightMap1.texture},this.averagingWindow={value:100},this.targetMat.onBeforeCompile=h=>{h.vertexShader=`varying vec2 vUv;
`+h.vertexShader.slice(0,-1)+"vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }";const P=h.fragmentShader.indexOf("void main() {");h.fragmentShader=`varying vec2 vUv;
`+h.fragmentShader.slice(0,P)+`uniform sampler2D previousShadowMap;
	uniform float averagingWindow;
`+h.fragmentShader.slice(P-1,-1)+`
vec3 texelOld = texture2D(previousShadowMap, vUv).rgb;
        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);
      }`,h.uniforms.previousShadowMap=this.previousShadowMap,h.uniforms.averagingWindow=this.averagingWindow}}clear(){this.renderer.getClearColor(this.clearColor),this.clearAlpha=this.renderer.getClearAlpha(),this.renderer.setClearColor("black",1),this.renderer.setRenderTarget(this.progressiveLightMap1),this.renderer.clear(),this.renderer.setRenderTarget(this.progressiveLightMap2),this.renderer.clear(),this.renderer.setRenderTarget(null),this.renderer.setClearColor(this.clearColor,this.clearAlpha),this.lights=[],this.meshes=[],this.scene.traverse(e=>{me(e)?this.meshes.push({object:e,material:e.material}):pe(e)&&this.lights.push({object:e,intensity:e.intensity})})}prepare(){this.lights.forEach(e=>e.object.intensity=0),this.meshes.forEach(e=>e.object.material=this.discardMat)}finish(){this.lights.forEach(e=>e.object.intensity=e.intensity),this.meshes.forEach(e=>e.object.material=e.material)}configure(e){this.object=e}update(e,n=100){if(!this.object)return;this.averagingWindow.value=n,this.object.material=this.targetMat;const o=this.buffer1Active?this.progressiveLightMap1:this.progressiveLightMap2,r=this.buffer1Active?this.progressiveLightMap2:this.progressiveLightMap1,h=this.scene.background;this.scene.background=null,this.renderer.setRenderTarget(o),this.previousShadowMap.value=r.texture,this.buffer1Active=!this.buffer1Active,this.renderer.render(this.scene,e),this.renderer.setRenderTarget(null),this.scene.background=h}}let L,d,p,l,c,x,D=new N;const A={bgColor:new T,printCam:()=>{}},v=new W,ue=new oe,I=new ne,G=new re;let m;G.setDecoderPath("https://www.gstatic.com/draco/v1/decoders/");I.setDRACOLoader(G);const z=new Z,b=[];let S,g,w,u,s;const t={temporal:!0,frames:40,limit:1/0,blend:40,scale:10,opacity:.8,alphaTest:.7},i={bias:.001,mapSize:1024,size:8,near:.5,far:200,position:new ae(3,5,3),radius:1,amount:8,intensity:2,ambient:.5},M={count:0,resetPlm:()=>{}};async function Ee(a){x=a,S=x.addFolder("Scene"),L=new te,app.appendChild(L.dom),d=new B({antialias:!0,powerPreference:"high-performance"}),d.setPixelRatio(Math.min(1.5,window.devicePixelRatio)),d.setSize(window.innerWidth,window.innerHeight),d.shadowMap.enabled=!0,d.outputColorSpace=V,d.toneMapping=X,app.appendChild(d.domElement),p=new q(50,window.innerWidth/window.innerHeight,.1,200),p.position.set(6,3,6),p.name="Camera",l=new Y,ue.load(le.skidpan.hdr,n=>{n.mapping=K,l.backgroundBlurriness=.7,l.background=n,l.environment=n}),l.add(v),c=new ie(p,d.domElement),c.enableDamping=!0,c.dampingFactor=.05,c.minDistance=.1,c.maxDistance=100,c.maxPolarAngle=Math.PI/1.5,c.target.set(0,0,0),c.target.set(0,0,0),m=new se(p,d.domElement),m.addEventListener("dragging-changed",n=>{c.enabled=!n.value,n.value||g.recalculate()}),m.addEventListener("change",()=>{m.object&&m.object.position.y<0&&(m.object.position.y=0)}),window.addEventListener("resize",we),document.addEventListener("pointermove",E);let e=Date.now();document.addEventListener("pointerdown",()=>{e=Date.now()}),document.addEventListener("pointerup",n=>{Date.now()-e<200&&(E(n),Me())}),S.add(m,"mode",["translate","rotate","scale"]),S.add(l,"backgroundBlurriness",0,1,.01),S.addColor(A,"bgColor").onChange(()=>{l.background=A.bgColor}),Se(),await be()}function we(){p.aspect=window.innerWidth/window.innerHeight,p.updateProjectionMatrix(),d.setSize(window.innerWidth,window.innerHeight)}function ve(){L.update(),c.update(),ye(),d.render(l,p)}function _(){requestAnimationFrame(_),ve()}function Me(){if(z.setFromCamera(D,p),z.intersectObject(v,!0,b),!b.length){m.detach();return}m.attach(b[0].object),b.length=0}function E(a){D.x=a.clientX/window.innerWidth*2-1,D.y=-(a.clientY/window.innerHeight)*2+1}async function be(){const a=new y(new Q(.5).translate(0,.5,0),new R({color:16777215*Math.random(),roughness:0,metalness:1}));a.name="sphere",a.castShadow=!0,a.receiveShadow=!0,a.position.set(2,0,-1.5),v.add(a);const e=new y(new ee(1,1,1).translate(0,.5,0),new R({color:16777215*Math.random(),roughness:.3,metalness:0}));e.name="cube",e.castShadow=!0,e.receiveShadow=!0,e.position.set(-1.5,0,1.5),v.add(e);const o=(await I.loadAsync(de.monkey.url)).scene;o.name="suzanne",o.traverse(r=>{r.isMesh&&(r.castShadow=!0,r.receiveShadow=!0)}),v.add(o),g.clear(),_()}function Se(){g=new fe(d,l,1024),s=new ge({map:g.progressiveLightMap2.texture,transparent:!0,depthWrite:!1,toneMapped:!0,blend:2,alphaTest:0}),s.color.set(0),u=new y(new $(1,1).rotateX(-Math.PI/2),s),u.scale.setScalar(t.scale),u.receiveShadow=!0,l.add(u),g.configure(u),w=new W;for(let a=0;a<i.amount;a++){const e=new J(16777215,i.intensity/i.amount);e.name="dir_light_"+a,e.castShadow=!0,e.shadow.bias=i.bias,e.shadow.camera.near=i.near,e.shadow.camera.far=i.far,e.shadow.camera.right=i.size/2,e.shadow.camera.left=-i.size/2,e.shadow.camera.top=i.size/2,e.shadow.camera.bottom=-i.size/2,e.shadow.mapSize.width=i.mapSize,e.shadow.mapSize.height=i.mapSize,w.add(e)}Le(x)}function Ce(){const a=i.position.length();for(let e=0;e<w.children.length;e++){const n=w.children[e];if(Math.random()>i.ambient)n.position.set(i.position.x+C.randFloatSpread(i.radius),i.position.y+C.randFloatSpread(i.radius),i.position.z+C.randFloatSpread(i.radius));else{let o=Math.acos(2*Math.random()-1)-Math.PI/2,r=2*Math.PI*Math.random();n.position.set(Math.cos(o)*Math.cos(r)*a,Math.abs(Math.cos(o)*Math.sin(r)*a),Math.sin(o)*a)}}}function f(){console.log("reset"),g.clear(),s.opacity=0,s.alphaTest=0,M.count=0,!t.temporal&&t.frames!==1/0&&j(t.frames)}function ye(){(t.temporal||t.frames===1/0)&&M.count<t.frames&&M.count<t.limit&&(j(),M.count++)}function j(a=1){t.blend=Math.max(2,t.frames===1/0?t.blend:t.frames),t.temporal?(s.opacity=Math.min(t.opacity,s.opacity+t.opacity/t.blend),s.alphaTest=Math.min(t.alphaTest,s.alphaTest+t.alphaTest/t.blend)):(s.opacity=t.opacity,s.alphaTest=t.alphaTest),l.add(w),g.prepare();for(let e=0;e<a;e++)Ce(),g.update(p,t.blend);l.remove(w),g.finish()}function Le(a){const e=a.addFolder("Shadow Material");e.open(),e.add(t,"opacity",0,1).onChange(r=>{s.opacity=r}),e.add(t,"alphaTest",0,1).onChange(r=>{s.alphaTest=r}),e.addColor(s,"color"),e.add(s,"blend",0,3);const n=a.addFolder("Shadow params");n.open(),n.add(t,"temporal"),n.add(M,"resetPlm").name("Re compute âš¡").onChange(f),n.add(t,"frames",2,100,1).onFinishChange(f),n.add(t,"scale",.5,30).onChange(r=>{u.scale.setScalar(r)}).onFinishChange(f),n.add(i,"radius",.1,5).onFinishChange(f),n.add(i,"ambient",0,1).onFinishChange(f);const o=a.addFolder("ðŸ’¡ Light source");o.open(),o.add(i.position,"x",-5,5).name("Light Direction X").onFinishChange(f),o.add(i.position,"y",1,5).name("Light Direction Y").onFinishChange(f),o.add(i.position,"z",-5,5).name("Light Direction Z").onFinishChange(f)}export{Ee as default};
