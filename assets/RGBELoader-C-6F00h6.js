import{aY as P,H as B,Y as S,a$ as G,ak as Y,L as u}from"./OrbitControls-R0lqBEeo.js";class O extends P{constructor(g){super(g),this.type=B}parse(g){const _=function(r,e){switch(r){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(e||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(e||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(e||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(e||""))}},D=function(r,e,o){e=e||1024;let s=r.pos,i=-1,a=0,l="",t=String.fromCharCode.apply(null,new Uint16Array(r.subarray(s,s+128)));for(;0>(i=t.indexOf(`
`))&&a<e&&s<r.byteLength;)l+=t,a+=t.length,s+=128,t+=String.fromCharCode.apply(null,new Uint16Array(r.subarray(s,s+128)));return-1<i?(r.pos+=a+i+1,l+t.slice(0,i)):!1},U=function(r){const e=/^#\?(\S+)/,o=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,n=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,s=/^\s*FORMAT=(\S+)\s*$/,i=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,a={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let l,t;for((r.pos>=r.byteLength||!(l=D(r)))&&_(1,"no header found"),(t=l.match(e))||_(3,"bad initial token"),a.valid|=1,a.programtype=t[1],a.string+=l+`
`;l=D(r),l!==!1;){if(a.string+=l+`
`,l.charAt(0)==="#"){a.comments+=l+`
`;continue}if((t=l.match(o))&&(a.gamma=parseFloat(t[1])),(t=l.match(n))&&(a.exposure=parseFloat(t[1])),(t=l.match(s))&&(a.valid|=2,a.format=t[1]),(t=l.match(i))&&(a.valid|=4,a.height=parseInt(t[1],10),a.width=parseInt(t[2],10)),a.valid&2&&a.valid&4)break}return a.valid&2||_(3,"missing format specifier"),a.valid&4||_(3,"missing image size specifier"),a},V=function(r,e,o){const n=e;if(n<8||n>32767||r[0]!==2||r[1]!==2||r[2]&128)return new Uint8Array(r);n!==(r[2]<<8|r[3])&&_(3,"wrong scanline width");const s=new Uint8Array(4*e*o);s.length||_(4,"unable to allocate buffer space");let i=0,a=0;const l=4*n,t=new Uint8Array(4),E=new Uint8Array(l);let N=o;for(;N>0&&a<r.byteLength;){a+4>r.byteLength&&_(1),t[0]=r[a++],t[1]=r[a++],t[2]=r[a++],t[3]=r[a++],(t[0]!=2||t[1]!=2||(t[2]<<8|t[3])!=n)&&_(3,"bad rgbe scanline format");let R=0,c;for(;R<l&&a<r.byteLength;){c=r[a++];const h=c>128;if(h&&(c-=128),(c===0||R+c>l)&&_(3,"bad scanline data"),h){const m=r[a++];for(let f=0;f<c;f++)E[R++]=m}else E.set(r.subarray(a,a+c),R),R+=c,a+=c}const C=n;for(let h=0;h<C;h++){let m=0;s[i]=E[h+m],m+=n,s[i+1]=E[h+m],m+=n,s[i+2]=E[h+m],m+=n,s[i+3]=E[h+m],i+=4}N--}return s},v=function(r,e,o,n){const s=r[e+3],i=Math.pow(2,s-128)/255;o[n+0]=r[e+0]*i,o[n+1]=r[e+1]*i,o[n+2]=r[e+2]*i,o[n+3]=1},x=function(r,e,o,n){const s=r[e+3],i=Math.pow(2,s-128)/255;o[n+0]=G.toHalfFloat(Math.min(r[e+0]*i,65504)),o[n+1]=G.toHalfFloat(Math.min(r[e+1]*i,65504)),o[n+2]=G.toHalfFloat(Math.min(r[e+2]*i,65504)),o[n+3]=G.toHalfFloat(1)},w=new Uint8Array(g);w.pos=0;const d=U(w),k=d.width,H=d.height,y=V(w.subarray(w.pos),k,H);let b,I,p;switch(this.type){case S:p=y.length/4;const r=new Float32Array(p*4);for(let o=0;o<p;o++)v(y,o*4,r,o*4);b=r,I=S;break;case B:p=y.length/4;const e=new Uint16Array(p*4);for(let o=0;o<p;o++)x(y,o*4,e,o*4);b=e,I=B;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:k,height:H,data:b,header:d.string,gamma:d.gamma,exposure:d.exposure,type:I}}setDataType(g){return this.type=g,this}load(g,L,A,F){function M(_,T){switch(_.type){case S:case B:_.colorSpace=Y,_.minFilter=u,_.magFilter=u,_.generateMipmaps=!1,_.flipY=!0;break}L&&L(_,T)}return super.load(g,M,A,F)}}export{O as R};
